[package]
name = 'clover'
authors = ['Clover Network <https://github.com/clover-network>']
build = 'build.rs'
description = 'Clover node'
edition = '2021'
license = 'GPL-3.0'
homepage = 'https://clover.finance'
repository = 'https://github.com/clover-network/clover'
version = '0.9.0'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[[bin]]
name = 'clover'

[dependencies]
clover-primitives = { workspace = true }
clover-runtime = { workspace = true }
clover-rpc = { workspace = true }
futures = { workspace = true }

log = { workspace = true }
jsonrpc-core = { workspace = true }
jsonrpc-pubsub = { workspace = true }
jsonrpsee = { workspace = true, features = ["server", "macros"] }
structopt = { workspace = true, optional = true }
serde_json = { workspace = true }
serde = { features = ["derive"], workspace = true, default-features = true }
clap = { features = ["derive"], optional = true, workspace = true }

pallet-contracts = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
sc-authority-discovery = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-cli = { optional = true, workspace = true }
sc-client-api = { workspace = true }
sc-chain-spec = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-babe-rpc = { workspace = true }
sc-consensus-epochs = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sp-timestamp = { workspace = true }
sc-consensus-grandpa-rpc = { workspace = true }
sc-consensus-grandpa  = { workspace = true }
sc-executor = { workspace = true }
sc-mixnet = { workspace = true }
sc-keystore = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-sync-state-rpc = { workspace = true }
sc-service = { workspace = true }
sc-transaction-pool = { workspace = true }
sp-api = { workspace = true }
sp-authority-discovery = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-consensus-babe = { workspace = true, features = ["std"] }
sp-core = { workspace = true, features = ["std"] }
sp-io = { workspace = true, features = ["std"] }
sp-consensus-grandpa = { workspace = true }
sp-inherents = { workspace = true }
sp-keystore = { workspace = true }
sp-runtime = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-transaction-storage-proof = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
hex-literal = { workspace = true }
sc-telemetry = { workspace = true }
pallet-evm = { workspace = true }
pallet-ethereum = { workspace = true }
fc-api = { workspace = true }
fc-rpc = { workspace = true, features = ["rpc-binary-search-estimate"] }
fc-consensus = { workspace = true }
fc-storage = { workspace = true }
fp-consensus = { workspace = true }
fc-cli = { workspace = true }
fc-db = { workspace = true }
fc-rpc-core = { workspace = true }
fc-mapping-sync = { workspace = true }
fp-rpc = { workspace = true }
fp-evm = { workspace = true }
fp-storage = { workspace = true }
primitive-types = { workspace = true, features = ["rlp", "byteorder"] }
polkadot-sdk = { features = ["node"], workspace = true, default-features = true }
staging-node-inspect = { optional = true, workspace = true, default-features = true }

[build-dependencies]
clap = { optional = true, workspace = true }
staging-node-inspect = { optional = true, workspace = true, default-features = true }
polkadot-sdk = { features = ["frame-benchmarking-cli", "sc-cli", "sc-storage-monitor", "substrate-build-script-utils"], optional = true, workspace = true, default-features = true }


[features]
default = [ "cli", "sql", "rocksdb" ]
sql = [
	"fc-db/sql",
	"fc-mapping-sync/sql",
]
rocksdb = [
	"sc-cli/rocksdb",
	"sc-service/rocksdb",
	"fc-db/rocksdb",
	"fc-mapping-sync/rocksdb",
	"fc-rpc/rocksdb",
]
cli = [
	"clap",
    "staging-node-inspect",
	"polkadot-sdk",
]
